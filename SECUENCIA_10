
; PIC16F887 Configuration Bit Settings

; Assembly source line config statements

#include "p16f887.inc"

; CONFIG1
; __config 0x20D4
 __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0x3FFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
 
 LIST p = 16f887
 
 N EQU 0x00 ; crear constante
 cont1 EQU 0x23 ; guardar variable en el puesto 23
 cont2 EQU 0x24 ; guardar variable en el puesto 24
 
 VAR1 EQU 0x20 ; crear variable y guardar en 0x20
 VAR2 EQU 0x21
 VAR3 EQU 0x25
 
 CONT EQU 0x22
 ORG 0x00 ; memoria del programa
 GOTO INICIO ; PRIMERA INSTRUCCION - VAYA A INICIO
 
 INICIO
	 
    BCF STATUS, RP1
    BSF STATUS, RP0
    MOVLW 0x71 
    MOVWF OSCCON
    CLRF TRISD ;PUERTO D SEAN SALIDAS
    
    BSF STATUS, RP1 ; PARA IR AL BANK 3 DONDE ESTA EL ANSSEL
    CLRF ANSEL ; DESABILITAR ENTRADAS ANALOGICAS
    
    BCF STATUS, RP0 ; RP0 = 0
    BCF STATUS, RP1 ; RP1 = 0 ASI VOY AL BANK 0
    
    MOVLW 0x00
    MOVWF PORTD ;  PORTD TODAS SALIDAS
    
    
    
    MOVLW 0x80 ; MOVER ESTE VALOR A W
    MOVWF VAR1 ; PASAR EL VALOR DE W A VAR1
    
    MOVLW 0x01
    MOVWF VAR2
    
    MOVLW 0x01
    MOVWF VAR3
    
    MOVLW 0x03 ; Fin del primer loop.
    MOVWF CONT
    
 
SECUENCIA1
    MOVF VAR1,0 ; mover la variable VAR1 a el registro W
    IORWF VAR2 ,0 ; W or VAR2 y el resultado a el registro w. 
    IORWF VAR3 ,0 ; W or VAR3 y el resultado a el registro w. 
    MOVWF PORTD ; el resultado guardado en W muevo a el puerto d
 
LOOP1
    CALL RETARDO
    CALL RETARDO
    CALL RETARDO
    CALL RETARDO
    RRF VAR1 ; VAR1 HACIA LA DERECHA 
    RLF VAR2  
    

    
    DECFSZ CONT ; DECREMENTAR EL CONT HASTA 0
    GOTO SECUENCIA1
    
    
MOVLW 0x10 
MOVWF VAR1 
    
MOVLW 0x07
MOVWF VAR2
    
MOVLW 0x01
MOVWF VAR3
    
MOVLW 0x01
MOVWF CONT

SECUENCIA2
    MOVF VAR1,0 
    IORWF VAR2 ,0 ;
    IORWF VAR3 ,0
    MOVWF PORTD ;

    
    
MOVLW 0x08 
MOVWF VAR1 
MOVLW 0x10
MOVWF VAR2
MOVLW 0x01
MOVWF VAR3
MOVLW 0x02
MOVWF CONT

SECUENCIA3
    MOVF VAR1,0 
    IORWF VAR2 ,0 
    IORWF VAR3 ,0
    MOVWF PORTD ;
LOOP3
    CALL RETARDO
    CALL RETARDO
    CALL RETARDO
    CALL RETARDO
    RLF VAR2
    
    RRF VAR1
    RRF VAR1
    MOVF VAR1, 0 
    IORLW 0x08 
    MOVWF VAR1 
    
    DECFSZ CONT
    GOTO SECUENCIA3
    
    
MOVLW 0x0C 
MOVWF VAR1 
MOVLW 0x40
MOVWF VAR2
MOVLW 0x01
MOVWF VAR3
MOVLW 0x02
MOVWF CONT

SECUENCIA4
    MOVF VAR1,0 
    IORWF VAR2 ,0 
    IORWF VAR3 ,0
    MOVWF PORTD 
LOOP4
    CALL RETARDO
    CALL RETARDO
    CALL RETARDO
    CALL RETARDO
    
    RRF VAR1
    MOVF VAR1, 0 
    IORLW 0x08 
    MOVWF VAR1 
    
    RLF VAR2
    
    DECFSZ CONT
    GOTO SECUENCIA4
    

 
RETARDO
    MOVLW N
    MOVWF cont1
    
REP_1
    MOVLW N
    MOVWF cont2
    
REP_2
    DECFSZ cont2 , 1 ;el valor se guarda en el conbtador 2.
     GOTO REP_2
    DECFSZ cont1 , 1
    GOTO REP_1
    RETURN


end



